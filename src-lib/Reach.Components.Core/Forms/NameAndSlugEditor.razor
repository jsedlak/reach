<div class="relative">
    <TextBox TModel="string"
             Value="@Name"
             ValueChanged="@OnNameChanged" />
    @{
        var validIconClass = "text-green-400";
        if (_isValidating)
        {
            validIconClass = "text-white";
        }
        else
        {
            validIconClass = IsValid ? "text-green-400" : "text-red-400";
        }
    }
    <div class="absolute right-2 top-2 @validIconClass">
        @if (_isValidating)
        {
            @HeroIcons.EllipsisHorizontalCircle(widthAndHeight: "size-5")
        }
        else if (IsValid)
        {
            @HeroIcons.CheckCircle(widthAndHeight: "size-5")
        }
        else
        {
            @HeroIcons.XMark(widthAndHeight: "size-5")
        }
    </div>
</div>
@if (!_isSlugEditorVisible && !string.IsNullOrWhiteSpace(Slug))
{
    <p class="block mt-1 opacity-75">
        <span>@Slug</span>
        <span>
            (<a class="cursor-pointer text-indigo-600 dark:text-indigo-200 underline decoration-wavy decoration-indigo-400" @onclick="@OnBeginEditSlug">Edit</a>)
        </span>
    </p>
}
@if (_isSlugEditorVisible)
{
    <div class="mt-3">
        <div class="flex items-center gap-2">
            <div class="flex-grow">
                <TextBox TModel="string" ValueChanged="OnSlugChanged" Value="@Slug" />
            </div>
            <Button Type="ButtonType.PrimaryOutline" Clicked="OnConfirmSlugEdit">
                @HeroIcons.Check(widthAndHeight: "size-5")
            </Button>
            <Button Type="ButtonType.ErrorOutline" Clicked="OnCancelSlugEdit">
                @HeroIcons.XMark(widthAndHeight: "size-5")
            </Button>
        </div>
    </div>
}