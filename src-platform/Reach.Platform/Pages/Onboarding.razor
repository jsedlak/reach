@page "/onboarding"
@layout GlobalCenteredLayout
@attribute [Authorize]
@inject NavigationManager Navigation
<PageTitle>Onboarding - Reach</PageTitle>
<div class="bg-gradient-to-br from-gray-900 to-indigo-800 shadow-xl rounded-lg border border-indigo-800 p-2 mt-10"
     style="max-width: 50%">
    <div class="px-10 py-3 text-white text-center my-4 font-bold text-4xl">
        Welcome to Reach!
    </div>
    <div class="p-10 dark:text-white rounded-lg text-white">
        @if (_errorMessage is not null)
        {
            <Alert Type="AlertType.Error" Title="Error Creating Tenant">
                <Content>
                    @_errorMessage
                </Content>
            </Alert>
        }

        <p class="leading-loose mb-4 text-lg text-white">
            Let's create your first organization and hub, so that you can start creating
            content!
        </p>

        <div class="mb-3">
            <Label>Organization</Label>
            <SubLabel>The name of your company, group or team.</SubLabel>
            <NameAndSlugEditor @bind-Name=@_model.OrganizationName
                               @bind-Slug=@_model.OrganizationSlug />
        </div>

        <div class="mb-3">
            <Label>Hub</Label>
            <SubLabel>The name of your company, group or team.</SubLabel>
            <NameAndSlugEditor @bind-Name=@_model.HubName
                               @bind-Slug=@_model.HubSlug />

            @* <div class="mt-3">
                <Label>Icon</Label>
                <select class=@Theme.Forms.SelectInput
                        @onchange=@((ev) => { _model.IconUrl = ev.Value?.ToString() ?? ""; StateHasChanged(); })>
                    <option value="">Please select an option...</option>
                    @foreach (var url in _hubIconUrls)
                    {
                        <option value="@url" selected=@(_model.IconUrl == url)>@url</option>
                    }
                </select>
            </div> *@
        </div>

        <div class="mt-4 flex items-bottom justify-between">
            <a @onclick="@OnSkipClicked"
               class="text-underline cursor-pointer underline opacity-75 underline text-xs flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg"
                     fill="none"
                     viewBox="0 0 24 24"
                     stroke-width="1.5"
                     stroke="currentColor"
                     class="size-6">
                    <path stroke-linecap="round"
                          stroke-linejoin="round"
                          d="M6.75 15.75 3 12m0 0 3.75-3.75M3 12h18" />
                </svg>

                <span>Skip onboarding...</span>
            </a>
            <Button Type="ButtonType.Primary" Disabled="_isProcessing" Clicked="@BeginCreate">
                @if (_isProcessing)
                {
                    <Spinner />
                }
                Create
                <svg xmlns="http://www.w3.org/2000/svg"
                     fill="none"
                     viewBox="0 0 24 24"
                     stroke-width="1.5"
                     stroke="currentColor"
                     class="size-6">
                    <path stroke-linecap="round"
                          stroke-linejoin="round"
                          d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3" />
                </svg>
            </Button>
        </div>
    </div>
</div>