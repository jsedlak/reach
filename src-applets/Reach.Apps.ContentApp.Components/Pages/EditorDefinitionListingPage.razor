@page "/app/{organizationSlug}/{hubSlug}/content/editor-definitions"
@using Reach.Content.Model
@inherits ContentBasePage
@rendermode InteractiveWebAssembly
<ContentSublayout Title="Editor Definitions">
    <Toolbar>
        <Button Clicked="@OnBeginCreateClicked" Type="ButtonType.PrimaryOutline">
            @HeroIcons.SquaresPlus("inline-block mr-2")
            <span>New Definition</span>
        </Button>
        <Button Clicked="@RefreshData" Type="ButtonType.PrimaryOutline">
            @HeroIcons.ArrowUturnDown("inline-block")
        </Button>
    </Toolbar>
    <Body>
        <TemplatedGrid Items="@_editorDefinitions">
            <ColumnTemplate>
                <Header>Name</Header>
                <Cell>
                    <a @onclick="@(() => OnBeginEditClicked(context))">
                        @context.Name<br />
                        <span class="text-sm opacity-75">@context.Id</span>
                    </a>
                </Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Editor</Header>
                <Cell>@context.EditorType</Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Parameters</Header>
                <Cell>@context.Parameters.Count()</Cell>
            </ColumnTemplate>
        </TemplatedGrid>

        <Dialog Title="Create Editor Definitions" @bind-IsVisible="@_createContext.IsVisible">
            <Content>
                @if (_createContext.IsWaiting)
                {
                    <Spinner />
                }
                else
                {
                    <div class="mb-3">
                        <Label>Name</Label>
                        <TextBox @bind-Value="@_createContext.TentativeModel.Name" />
                    </div>

                    <div class="mb-3">
                        <Label>Editor Type</Label>
                        <SubLabel>A razor component reference that enables editing of data within the Reach platform.</SubLabel>
                        @* <TextBox @bind-Value="@_createContext.TentativeModel.EditorType" /> *@
                        <EditorSelector @bind-SelectedEditor="@_createContext.TentativeModel.EditorType" />
                    </div>
                }
            </Content>
            <Footer>
                <Button Clicked="@OnCancelCreateClicked" Type="ButtonType.DefaultOutline">Cancel</Button>
                <Button Clicked="@OnConfirmCreateClicked" Type="ButtonType.Primary">Create</Button>
            </Footer>
        </Dialog>

        <Flyout Placement="PanelPlacement.Right"
                Title="Edit Definition"
                @bind-IsVisible="@_isEditFlyoutVisible">
            <Content>
                <div class="mb-3">
                    <p>@_editContext.DisplayName</p>
                    <p>@_editContext.EditorType</p>
                </div>
                <div class="mb-3">
                    <Label>Display Name</Label>
                    <TextBox @bind-Value="@_editContextParameter.DisplayName" />
                </div>

                <div class="mb-3">
                    <div class="flex items-center gap-2">
                        <select @onchange="OnNewParameterTypeChanged" class="flex-grow @Theme.Forms.SelectInput">
                            @{
                                var values = Enum.GetValues(typeof(EditorParameterType));
                            }
                            @foreach (var value in values)
                            {
                                <option value="@value"
                                        selected="@((EditorParameterType)value == _editContextParameter.Type)">
                                    @(((EditorParameterType)value).ToString())
                                </option>
                            }
                        </select>
                        <Button Type="ButtonType.PrimaryOutline" Clicked="OnAddParameter">
                            @HeroIcons.PlusCircle("inline-block")
                            <span>Add</span>
                        </Button>
                    </div>
                </div>

                <div class="mb-3">
                    <DraggableList @bind-Items=@_editParameters>
                        <ItemTemplate>
                            <h4 class="font-bold">@context.DisplayName</h4>
                            <p class="text-small">@context.Type</p>
                        </ItemTemplate>
                    </DraggableList>
                </div>
            </Content>
            <Footer>
                <div class="flex items-center gap-2">
                    <Button Type="ButtonType.DefaultOutline" Clicked="@(() => { _isEditFlyoutVisible = false; StateHasChanged(); })">
                        <span>Cancel</span>
                    </Button>
                    <Button Type="ButtonType.Primary" Clicked="OnSaveParameters">
                        @HeroIcons.CloudArrowUp("inline-block")
                        <span>Save</span>
                    </Button>
                </div>
            </Footer>

        </Flyout>
    </Body>
</ContentSublayout>
