@page "/app/{organizationSlug}/{hubSlug}/content/components"
@inherits ContentBasePage
<ContentSublayout Title="Components">
    <Toolbar>
        <Button Clicked="@OnBeginCreateClicked" Type="ButtonType.PrimaryOutline">
            @HeroIcons.SquaresPlus("inline-block mr-2")
            <span>New Component</span>
        </Button>
        <Button Clicked="@RefreshData" Type="ButtonType.PrimaryOutline">
            @HeroIcons.ArrowUturnDown("inline-block")
        </Button>
    </Toolbar>
    <Body>
        <TemplatedGrid Items="@_components">
            <ColumnTemplate>
                <Header>ID</Header>
                <Cell>
                    <ShortGuid Value=@context.Id />
                </Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Name</Header>
                <Cell>
                    <a @onclick="@(() => OnBeginEditComponent(context))" class="cursor-pointer">
                        @context.Name
                    </a>
                </Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Slug</Header>
                <Cell>@context.Slug</Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Definition</Header>
                <Cell>
                    @{
                        var defn = _contentContextProvider
                        .ComponentDefinitions
                        .FirstOrDefault(m => m.Id == context.DefinitionId);
                    }
                    @if (defn is null)
                    {
                        <span>Unknown Definition</span>
                    }
                    else
                    {
                        <span>@defn.Name</span>
                    }
                </Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Fields</Header>
                <Cell>@context.Fields?.Count()</Cell>
            </ColumnTemplate>
        </TemplatedGrid>

        <Dialog Title="Create Component" @bind-IsVisible="@_createContext.IsVisible">
            <Content>
                @if (_createContext.IsWaiting)
                {
                    <Spinner />
                }
                else
                {
                    <NameAndSlugEditor @bind-Name="@_createContext.TentativeModel.Name"
                    @bind-Slug="@_createContext.TentativeModel.Slug" />

                    <div class="mb-3">
                        <Label>Component Definition</Label>
                        <ComponentDefinitionSelector @bind-SelectedComponentDefinitionId="@_createContext.TentativeModel.DefinitionId" />
                    </div>
                }

            </Content>
            <Footer>
                <Button Clicked="@OnCancelCreateClicked" Type="ButtonType.DefaultOutline">Cancel</Button>
                <Button Clicked="@OnConfirmCreateClicked" Type="ButtonType.Primary">Create</Button>
            </Footer>
        </Dialog>

        <Flyout Placement="PanelPlacement.Right"
        Title=@($"{_editContext?.Name} - Component")
        @bind-IsVisible="@_isEditFlyoutVisible">
            <Content>
                @if(_isEditFlyoutVisible && _editContext.Id != Guid.Empty)
                {
                    <ComponentEditor Component="@_editContext" />
                } 
            </Content>
        </Flyout>
    </Body>
</ContentSublayout>