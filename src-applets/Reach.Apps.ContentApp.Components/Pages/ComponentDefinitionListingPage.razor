@page "/app/{organizationSlug}/{hubSlug}/content/component-definitions"
@using Reach.Content.Model
@inherits ContentBasePage
<ContentSublayout Title="Component Definitions">
    <Toolbar>
        <Button Clicked="@OnBeginCreateClicked" Type="ButtonType.PrimaryOutline">
            @HeroIcons.SquaresPlus("inline-block mr-2")
            <span>New Definition</span>
        </Button>
        <Button Clicked="@RefreshData" Type="ButtonType.PrimaryOutline">
            @HeroIcons.ArrowUturnDown("inline-block")
        </Button>
    </Toolbar>
    <Body>
        <TemplatedGrid Items="@_componentDefinitions">
            <ColumnTemplate>
                <Header>Id</Header>
                <Cell>
                    <ShortGuid Value="@context.Id" />
                </Cell>
            </ColumnTemplate>
            <ColumnTemplate>
                <Header>Name</Header>
                <Cell>
                    <a class="cursor-pointer" @onclick="@(() => BeginEdit(context))">
                        @context.Name
                    </a>
                </Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Slug</Header>
                <Cell>@context.Slug</Cell>
            </ColumnTemplate>

            <ColumnTemplate>
                <Header>Fields</Header>
                <Cell>@context.Fields.Count()</Cell>
            </ColumnTemplate>
        </TemplatedGrid>

        <Dialog Title="Create Component Definition" @bind-IsVisible="@_createContext.IsVisible">
            <Content>
                @if (_createContext.IsWaiting)
                {
                    <Spinner />
                }
                else
                {
                    <NameAndSlugEditor @bind-Name="@_createContext.TentativeModel.Name"
                                       @bind-Slug="@_createContext.TentativeModel.Slug" />
                }
            </Content>
            <Footer>
                <Button Clicked="@OnCancelCreateClicked" Type="ButtonType.DefaultOutline">Cancel</Button>
                <Button Clicked="@OnConfirmCreateClicked" Type="ButtonType.Primary">Create</Button>
            </Footer>
        </Dialog>

        <Flyout Placement="PanelPlacement.Right"
                Title=@($"{_editContext?.Name} - Component Definition")
                @bind-IsVisible="@_isEditFlyoutVisible">
            <Content>
                <div class="">
                    <NameAndSlugEditor @bind-Name="_addFieldCommand.Name"
                                       @bind-Slug="_addFieldCommand.Slug" />

                    <div class="mb-3">
                        <FieldDefinitionSelector @bind-SelectedFieldDefinitionId="@_addFieldCommand.FieldDefinitionId" />
                    </div>

                    <div class="mb-3">
                        <Button Type="ButtonType.Primary" Block Clicked="@OnFieldAdded">Add</Button>
                    </div>
                </div>
                @if (_editContext != null && _editContext.Fields.Any())
                {
                    <div class="mb-3">
                        <DraggableList 
                            TItem="Field" 
                            ItemsChanged="@((items) => { _editContext.Fields = items.ToArray(); StateHasChanged(); })"
                            Items=@_editContext.Fields>
                            <ItemTemplate>
                                @context.Name
                            </ItemTemplate>
                        </DraggableList>
                    </div>
                }
            </Content>
        </Flyout>
    </Body>
</ContentSublayout>